{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/History.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-testid","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","History_templateObject","History","History_Container","Calculator_templateObject","Box","_templateObject2","evalFunc","string","substr","lapenIndex","lastIndexOf","subResult","Math","sqrt","Function","length","Calculator","historyCount","state","historyList","key","_this$state$displayVa","lastChar","operatorKeys","proc","AC","setState","BS","√","beforeEval","replace","includes","result","before","after","reverseList","reverse","concat","÷","×","-","+","=",".","displayTemp","index","count","indexOf","0","Number","data","_this2","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","components_History","map","onClickBox","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.41d098a0.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 10px auto;\n  width: 300px;\n  padding: 10px;\n  border: 2px solid #000;\n  border-radius: 5px;\n  text-align: center;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\n`;\n\nclass Panel extends React.Component {\n  render() {\n    return <Container>{this.props.children}</Container>;\n  }\n}\n\nexport default Panel;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 5px;\n  [data-display] {\n    border-radius: 5px;\n    border: 2px solid #000;\n    height: 60px;\n    line-height: 60px;\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n    text-align: left;\n    font-size: 18px;\n    font-weight: bold;\n    padding: 0 15px;\n    color: #000;\n  }\n`;\n\nclass Display extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\n      </Container>\n    );\n  }\n}\n\nexport default Display;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n`;\n\nclass ButtonGroup extends React.Component {\n  handleClick = e => {\n    this.props.onClickButton(e.target.textContent);\n  };\n  render() {\n    return (\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\n    );\n  }\n}\n\nexport default ButtonGroup;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  float: left;\n  width: ${p => (p.size / 4) * 100}%;\n  padding: 5px;\n  button {\n    :focus {\n      outline: none;\n    }\n    :hover {\n      background: #eee;\n    }\n    :active {\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\n    }\n    color: #000;\n    font-size: 20px;\n    line-height: 40px;\n    font-weight: bold;\n    cursor: pointer;\n    width: 100%;\n    background: transparent;\n    border-radius: 5px;\n    border: 2px solid #000;\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\n\n    &[data-color=\"gray\"] {\n      background: #eee;\n      :hover {\n        background: #ccc;\n      }\n    }\n  }\n`;\n\nclass Button extends React.Component {\n  render() {\n    const { size = 1, color, children } = this.props;\n    return (\n      <Container size={size}>\n        <button data-color={color}>{children}</button>\n      </Container>\n    );\n  }\n}\n\nexport default Button;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 300px;\n  height: 374px;\n  padding: 10px;\n  margin: 20px auto;\n  border: 2px solid #000;\n  border-radius: 5px;\n  text-align: center;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\n  overflow-y: scroll;\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n  ::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera*/\n  }\n`;\n\n// TODO: Panel 을 참고해서 History component 생성 및 export\nclass History extends React.Component {\n  render() {\n    return <Container data-testid=\"history\">{this.props.children}</Container>;\n  }\n}\n\nexport default History;\n\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport Panel from \"./Panel\";\nimport Display from \"./Display\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport Button from \"./Button\";\nimport History from \"./History\";\n\nconst Container = styled.div`\n  margin: 30px auto;\n  text-align: center;\n`;\n\n// TODO: History 내에서 수식 표시할 때 사용\nconst Box = styled.div`\n  display: inline-block;\n  width: 270px;\n  height: 65px;\n  padding: 10px;\n  border: 2px solid #000;\n  border-radius: 5px;\n  text-align: right;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\n  margin-bottom: 10px;\n  cursor: pointer;\n  h3 {\n    margin: 0px;\n  }\n`;\n\nconst evalFunc = function(string) {\n  let firstChar = string.substr(0,1);\n  if(firstChar==\"√\") {\n    let lapenIndex = string.lastIndexOf(\")\");\n    let subResult = string.substr(2, lapenIndex-2);\n    subResult = Math.sqrt(evalFunc(subResult));\n    return new Function(\"return (\" + subResult + string.substr(lapenIndex+1,string.length) + \")\")();\n  }\n\n  return new Function(\"return (\" + string + \")\")();\n};\n\n\nclass Calculator extends React.Component {\n  // TODO: history 추가\n  historyCount = 0;\n  state = {\n    displayValue: \"\",\n    historyList: []\n  };\n\n  onClickButton = key => {\n    let { displayValue = \"\" } = this.state;\n    let { historyList = [] } = this.state;\n    displayValue = \"\" + displayValue;\n    const lastChar = displayValue.substr(displayValue.length - 1);\n    const operatorKeys = [\"÷\", \"×\", \"-\", \"+\"];\n    const proc = {\n      AC: () => {\n        this.setState({ displayValue: \"\" });\n      },\n      BS: () => {\n        if (displayValue.length > 0) {\n          displayValue = displayValue.substr(0, displayValue.length - 1);\n        }\n        this.setState({ displayValue });\n      },\n      // TODO: 제곱근 구현\n      \"√\": () => {\n        const beforeEval = \"√(\" + displayValue + \")\";\n        displayValue = displayValue.replace(/×/gi, \"*\");\n        displayValue = displayValue.replace(/÷/gi, \"/\");\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\n          displayValue = displayValue.substr(0, displayValue.length - 1);\n        } else if (lastChar !== \"\") {\n          displayValue = evalFunc(displayValue);\n          displayValue = Math.sqrt(displayValue);\n        }\n        const result = { before : beforeEval, after : \"= \" + displayValue}\n        let reverseList = this.state.historyList.reverse();\n        reverseList = reverseList.concat(result);\n        reverseList = reverseList.reverse()\n        this.setState({ displayValue });\n        this.setState({ historyList : reverseList });\n      },\n      // TODO: 사칙연산 구현\n      \"÷\": () => {\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"÷\" });\n        }\n      },\n      \"×\": () => {\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"×\" });\n        }\n      },\n      \"-\": () => {\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"-\" });\n        }\n      },\n      \"+\": () => {\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"+\" });\n        }\n      },\n      \"=\": () => {\n        const beforeEval = displayValue;\n        displayValue = displayValue.replace(/×/gi, \"*\");\n        displayValue = displayValue.replace(/÷/gi, \"/\");\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\n          displayValue = displayValue.substr(0, displayValue.length - 1);\n        } else if (lastChar !== \"\") {\n          displayValue = evalFunc(displayValue);\n        }\n        const result = { before : beforeEval, after : \"= \" + displayValue}\n        let reverseList = this.state.historyList.reverse();\n        reverseList = reverseList.concat(result);\n        reverseList = reverseList.reverse()\n        this.setState({ displayValue });\n        this.setState({ historyList : reverseList });\n      },\n      \".\": () => {\n        let displayTemp = (displayValue + \".\");\n        let index = -1;\n        let count = 0;\n\n        do  {\n            index = displayTemp.indexOf('.', index + 1);\n            if (index != -1) { count++; }\n        } while (index != -1);\n\n        if(count > 1){ this.setState({ displayValue: displayValue}); }\n        else { this.setState({ displayValue: displayTemp}); }\n      },\n      \"0\": () => {\n        if (Number(displayValue) !== 0) {\n          displayValue += \"0\";\n          this.setState({ displayValue });\n        }\n      }\n    };\n\n    if (proc[key]) {\n      proc[key]();\n    } else {\n      // 여긴 숫자\n      this.setState({ displayValue: displayValue + key });\n    }\n  };\n\n  onClickBox(data){\n    this.setState({ displayValue: data });\n  }\n\n  render() {\n    const historyList = this.state.historyList;\n    return (\n      <Container>\n        <Panel>\n          <Display displayValue={this.state.displayValue} />\n          <ButtonGroup onClickButton={this.onClickButton}>\n            <Button size={1} color=\"gray\">\n              AC\n            </Button>\n            <Button size={1} color=\"gray\">\n              BS\n            </Button>\n            <Button size={1} color=\"gray\">\n              √\n            </Button>\n            <Button size={1} color=\"gray\">\n              ÷\n            </Button>\n\n            <Button size={1}>7</Button>\n            <Button size={1}>8</Button>\n            <Button size={1}>9</Button>\n            <Button size={1} color=\"gray\">\n              ×\n            </Button>\n\n            <Button size={1}>4</Button>\n            <Button size={1}>5</Button>\n            <Button size={1}>6</Button>\n            <Button size={1} color=\"gray\">\n              -\n            </Button>\n\n            <Button size={1}>1</Button>\n            <Button size={1}>2</Button>\n            <Button size={1}>3</Button>\n            <Button size={1} color=\"gray\">\n              +\n            </Button>\n\n            <Button size={2}>0</Button>\n            <Button size={1}>.</Button>\n            <Button size={1} color=\"gray\">\n              =\n            </Button>\n          </ButtonGroup>\n        </Panel>\n        {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */}\n        <History>\n          {\n            historyList.map((data, index) => (\n              <Box key={index}\n                onClick={() => {this.onClickBox(data.before);}}>\n                <h3>{data.before}</h3>\n                <h3>{data.after}</h3>\n              </Box>\n            ))\n          }\n        </History>\n      </Container>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport Calculator from \"./components/Calculator\";\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}