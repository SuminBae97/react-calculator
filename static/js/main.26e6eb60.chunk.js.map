{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-testid","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","Calculator_templateObject","evalFunc","_templateObject2","string","substr","lapenIndex","lastIndexOf","subResult","Math","sqrt","Function","length","Calculator","histcount","state","historylist","key","_this$state$displayVa","lastChar","operatorKeys","proc","AC","setState","BS","√","includes","replace","÷","×","-","+","=",".","displayTemp","index","count","indexOf","0","Number","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.26e6eb60.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 10px auto;\n  width: 300px;\n  padding: 10px;\n  border: 2px solid #000;\n  border-radius: 5px;\n  text-align: center;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\n`;\n\nclass Panel extends React.Component {\n  render() {\n    return <Container>{this.props.children}</Container>;\n  }\n}\n\nexport default Panel;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 5px;\n  [data-display] {\n    border-radius: 5px;\n    border: 2px solid #000;\n    height: 60px;\n    line-height: 60px;\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\n    text-align: left;\n    font-size: 18px;\n    font-weight: bold;\n    padding: 0 15px;\n    color: #000;\n  }\n`;\n\nclass Display extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\n      </Container>\n    );\n  }\n}\n\nexport default Display;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n`;\n\nclass ButtonGroup extends React.Component {\n  handleClick = e => {\n    this.props.onClickButton(e.target.textContent);\n  };\n  render() {\n    return (\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\n    );\n  }\n}\n\nexport default ButtonGroup;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  float: left;\n  width: ${p => (p.size / 4) * 100}%;\n  padding: 5px;\n  button {\n    :focus {\n      outline: none;\n    }\n    :hover {\n      background: #eee;\n    }\n    :active {\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\n    }\n    color: #000;\n    font-size: 20px;\n    line-height: 40px;\n    font-weight: bold;\n    cursor: pointer;\n    width: 100%;\n    background: transparent;\n    border-radius: 5px;\n    border: 2px solid #000;\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\n\n    &[data-color=\"gray\"] {\n      background: #eee;\n      :hover {\n        background: #ccc;\n      }\n    }\n  }\n`;\n\nclass Button extends React.Component {\n  render() {\n    const { size = 1, color, children } = this.props;\n    return (\n      <Container size={size}>\n        <button data-color={color}>{children}</button>\n      </Container>\n    );\n  }\n}\n\nexport default Button;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport Panel from \"./Panel\";\nimport Display from \"./Display\";\nimport ButtonGroup from \"./ButtonGroup\";\nimport Button from \"./Button\";\n\nconst Container = styled.div`\n  margin: 30px auto;\n  text-align: center;\n`;\n\n// TODO: History 내에서 수식 표시할 때 사용\nconst Box = styled.div`\n  display: inline-block;\n  width: 270px;\n  height: 65px;\n  padding: 10px;\n  border: 2px solid #000;\n  border-radius: 5px;\n  text-align: right;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\n  margin-bottom: 10px;\n  cursor: pointer;\n  h3 {\n    margin: 0px;\n  }\n`;\n\nconst evalFunc = function(string) {\n  // eslint-disable-next-line no-new-func\n  let firstChar = string.substr(0,1);\n  if(firstChar==\"√\") {\n    let lapenIndex = string.lastIndexOf(\")\");\n    let subResult = string.substr(2, lapenIndex-2);\n    subResult = Math.sqrt(evalFunc(subResult));\n    return new Function(\"return (\" + subResult + string.substr(lapenIndex+1,string.length) + \")\")();\n  }\n  \n  return new Function(\"return (\" + string + \")\")();\n};\n\nclass Calculator extends React.Component {\n  // TODO: history 추가\n  histcount=0;\n\n  state = {\n    displayValue: \"\",\n    historylist:[]\n  };\n\n  onClickButton = key => {\n    let { displayValue = \"\" } = this.state;\n    displayValue = \"\" + displayValue;\n    const lastChar = displayValue.substr(displayValue.length - 1);\n    let check = 0 ;\n    const operatorKeys = [\"÷\", \"×\", \"-\", \"+\"];\n    const proc = {\n      AC: () => {\n        this.setState({ displayValue: \"\" });\n      },\n      BS: () => {\n        if (displayValue.length > 0) {\n          displayValue = displayValue.substr(0, displayValue.length - 1);\n        }\n        this.setState({ displayValue });\n      },\n      // TODO: 제곱근 구현\n      \"√\": () => {\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\n          displayValue = displayValue.substr(0, displayValue.length - 1);\n        } \n        else if (lastChar !== \"\") {\n          displayValue = displayValue.replace(/×/gi, \"*\");\n          displayValue = displayValue.replace(/÷/gi, '/');\n          displayValue = Math.sqrt(evalFunc(displayValue));\n\n        }\n        this.setState({ displayValue });\n        \n      },\n      // TODO: 사칙연산 구현\n      \"÷\": () => {\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"÷\" });\n        }\n      },\n      \"×\": () => {\n\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"×\" });\n        }\n      },\n      \"-\": () => {\n        //- 구현\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"-\" });\n        }\n      },\n      \"+\": () => {\n        // + 연산 참고하여 연산 구현\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\n          this.setState({ displayValue: displayValue + \"+\" });\n        }\n      },\n\n      \"=\": () => {\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\n          displayValue = displayValue.substr(0, displayValue.length - 1);\n        } \n        else if (lastChar !== \"\") {\n          displayValue = displayValue.replace(/×/gi, \"*\");\n          displayValue = displayValue.replace(/÷/gi, '/');\n          displayValue = evalFunc(displayValue);\n\n        }\n        this.setState({ displayValue });\n      },\n\n      \".\": () => {\n        let displayTemp = (displayValue + \".\");\n        let index = -1;\n        let count = 0;\n\n        do  {\n            index = displayTemp.indexOf('.', index + 1);\n            if (index != -1) { count++; }\n        } while (index != -1);\n\n        if(count > 1){ this.setState({ displayValue: displayValue}); }\n        else { this.setState({ displayValue: displayTemp}); }\n        \n        \n      },\n\n      \"0\": () => {\n        if (Number(displayValue) !== 0) {\n          displayValue += \"0\";\n          this.setState({ displayValue });\n        }\n      }\n    };\n\n    if (proc[key]) {\n      proc[key]();\n    } else {\n      // 여긴 숫자\n      this.setState({ displayValue: displayValue + key });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Panel>\n          <Display displayValue={this.state.displayValue} />\n          <ButtonGroup onClickButton={this.onClickButton}>\n            <Button size={1} color=\"gray\">\n              AC\n            </Button>\n            <Button size={1} color=\"gray\">\n              BS\n            </Button>\n            <Button size={1} color=\"gray\">\n              √\n            </Button>\n            <Button size={1} color=\"gray\">\n              ÷\n            </Button>\n\n            <Button size={1}>7</Button>\n            <Button size={1}>8</Button>\n            <Button size={1}>9</Button>\n            <Button size={1} color=\"gray\">\n              ×\n            </Button>\n\n            <Button size={1}>4</Button>\n            <Button size={1}>5</Button>\n            <Button size={1}>6</Button>\n            <Button size={1} color=\"gray\">\n              -\n            </Button>\n\n            <Button size={1}>1</Button>\n            <Button size={1}>2</Button>\n            <Button size={1}>3</Button>\n            <Button size={1} color=\"gray\">\n              +\n            </Button>\n\n            <Button size={2}>0</Button>\n            <Button size={1}>.</Button>\n            <Button size={1} color=\"gray\">\n              =\n            </Button>\n          </ButtonGroup>\n        </Panel>\n        {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */}\n\n      </Container>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport Calculator from \"./components/Calculator\";\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}